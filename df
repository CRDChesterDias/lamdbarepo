import pandas as pd

# File names
file_a = 'file_a.xlsx'
file_b = 'file_b.xlsx'

# üõ† Sheet-specific configuration
sheet_config = {
    'Employees': {
        'common_columns': ['Name', 'Email'],
        'status_column': 'Status',
        'status_value': 'to remove'
    },
    'Students': {
        'common_columns': ['ID'],
        'status_column': 'Flag',
        'status_value': 'exclude'
    },
    'Clients': {
        'common_columns': ['ClientID', 'Email'],
        'status_column': 'Action',
        'status_value': 'remove'
    },
    # Add more sheets as needed
}

# Dictionary to hold filtered data
output_data = {}

for sheet, config in sheet_config.items():
    try:
        df_a = pd.read_excel(file_a, sheet_name=sheet)
        df_b = pd.read_excel(file_b, sheet_name=sheet)

        if df_a.empty:
            output_data[sheet] = df_a
            continue

        # Get custom settings for this sheet
        common_columns = config['common_columns']
        status_column = config['status_column']
        status_value = config['status_value'].strip().lower()

        # Validate status column
        if status_column not in df_b.columns:
            print(f"‚ö†Ô∏è Sheet '{sheet}': '{status_column}' column not found in file_b.")
            output_data[sheet] = df_a
            continue

        # Filter rows from file_b where status_column matches status_value
        df_b_filtered = df_b[
            df_b[status_column].astype(str).str.strip().str.lower() == status_value
        ]

        # Check that all matching columns exist
        missing_in_a = [col for col in common_columns if col not in df_a.columns]
        missing_in_b = [col for col in common_columns if col not in df_b_filtered.columns]

        if missing_in_a or missing_in_b:
            print(f"‚ö†Ô∏è Sheet '{sheet}': Missing columns ‚Äî in A: {missing_in_a}, in B: {missing_in_b}")
            output_data[sheet] = df_a
            continue

        # Merge and remove rows that match (status condition already filtered)
        merged = pd.merge(df_a, df_b_filtered[common_columns], on=common_columns, how='left', indicator=True)
        filtered = merged[merged['_merge'] == 'left_only'].drop(columns=['_merge'])

        output_data[sheet] = filtered

    except Exception as e:
        print(f"‚ùå Error processing sheet '{sheet}': {e}")
        continue

# Save final result
with pd.ExcelWriter('filtered_output.xlsx') as writer:
    for sheet_name, df in output_data.items():
        df.to_excel(writer, sheet_name=sheet_name, index=False)

print("‚úÖ Success! Rows removed per sheet-specific status conditions. Output saved as 'filtered_output.xlsx'")
